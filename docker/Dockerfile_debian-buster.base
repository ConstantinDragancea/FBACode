FROM debian:buster
# set as env, we are noninteractive in the container too
ENV DEBIAN_FRONTEND=noninteractive

# add source code repos to debian
RUN rm /etc/apt/sources.list
COPY docker/sources_buster.list /etc/apt/sources.list
RUN apt-get update




RUN deps='software-properties-common curl gpg-agent gnupg' soft='python3 cmake make clang-9 clang++-9 texinfo build-essential fakeroot devscripts'\
  && apt-get update && apt-get install -y ${deps} --no-install-recommends\
  && curl https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\
  && add-apt-repository 'deb http://apt.llvm.org/buster/ llvm-toolchain-buster-9 main'\
  # && add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'\
  && apt-get update && apt-get install -y ${soft} --no-install-recommends\
  && apt-get purge -y --auto-remove ${DEPS}\
  && ln -s /usr/bin/clang-9 /usr/bin/clang\
  && ln -s /usr/bin/clang++-9 /usr/bin/clang++

ENV HOME_DIR /home/fba_code/
ENV SRC_DIR ${HOME_DIR}/code
ENV BUILD_DIR ${HOME_DIR}/build
ENV BITCODES_DIR ${HOME_DIR}/bitcodes

RUN mkdir -p ${HOME_DIR}
WORKDIR ${HOME_DIR}
ADD docker/init.py init.py
ADD code_builder/utils/ utils
ADD code_builder/build_systems/ build_systems
ADD code_builder/wrappers/ wrappers



# https://clang.debian.net/
# https://github.com/sylvestre/debian-clang/blob/master/clang-setup.sh
# force, since apt installed compilers

RUN ln -fs ${HOME_DIR}/wrappers/clang /usr/bin/cc\
  && ln -fs ${HOME_DIR}/wrappers/clang++ /usr/bin/c++\
  && ln -fs ${HOME_DIR}/wrappers/clang /usr/bin/gcc\
  && ln -fs ${HOME_DIR}/wrappers/clang++ /usr/bin/g++

# replace the version 8 of gcc
RUN cd ${HOME_DIR}/wrappers && ./replace_compilers.sh 8


# set the environment variables for c/cxx
# ENV CC ${HOME_DIR}/wrappers/clang
# ENV CXX ${HOME_DIR}/wrappers/clang++

RUN apt search '^gcc-[0-9]*[.]*[0-9]*$' | grep -o '\bgcc[a-zA-Z0-9:_.-]*' |\
  xargs -I {} echo "{}" hold | dpkg --set-selections

# Check if gcc, g++ & cpp are actually clang
RUN gcc --version|grep clang > /dev/null || exit 1
RUN g++ --version|grep clang > /dev/null || exit 1

# set up a user with id and group of current user to avoid user rights conflicts
# https://vsupalov.com/docker-shared-permissions/
# ARG USER_ID
# ARG GROUP_ID

# RUN addgroup --gid $GROUP_ID user
# RUN adduser --disabled-password --gecos '' --uid $USER_ID --gid $GROUP_ID user
# USER user

ENTRYPOINT ["python3", "-u", "init.py", "input.json"]
