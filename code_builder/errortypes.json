{
  "E: Unable to find a source package": {
    "name": "E: Unable to find a source package",
    "projects": [
      "isdnactivecards",
      "iozone3"
    ],
    "origin": "debian",
    "regex": "E\\:\\ Unable\\ to\\ find\\ a\\ source\\ package",
    "amount": 3
  },
  "clang: error: linker command failed": {
    "name": "linker command failed",
    "projects": [
      "libaccounts-qt",
      "libace-perl"
    ],
    "origin": "hardcoded",
    "regex": "clang\\:\\ error\\:\\ linker\\ command\\ failed",
    "amount": 3
  },
  "clang: error: linker command failed with exit code 1 (use -v to see invocation)": {
    "name": "clang: error: linker command failed with exit code 1 (use -v to see invocation)",
    "projects": [
      "libaccounts-qt",
      "libace-perl"
    ],
    "origin": "clang_other",
    "regex": "clang\\:\\ error\\:\\ linker\\ command\\ failed\\ with\\ exit\\ code\\ 1\\ \\(use\\ \\-v\\ to\\ see\\ invocation\\)",
    "amount": 3
  },
  "error: unsupported inline asm: input with type 'long' matching output with type 'char'": {
    "name": "unsupported inline asm: input with type 'long' matching output with type 'char'",
    "projects": [
      "sphde"
    ],
    "origin": "clang",
    "regex": "error\\:\\ unsupported\\ inline\\ asm\\:\\ input\\ with\\ type\\ \\'long\\'\\ matching\\ output\\ with\\ type\\ \\'char\\'",
    "amount": 2
  },
  "error: 'boostPATH/FILE.EXT file not found": {
    "name": "'boostPATH/FILE.EXT file not found",
    "projects": [
      "google-compute-image-packages"
    ],
    "origin": "clang",
    "regex": "error\\:\\ \\'boost(?:\\.\\.|\\.)?(?:[/]*/)+\\S*\\.\\S+(?:\\sline\\s\\d+:?)?(?=\\s|$|\\.)\\ file\\ not\\ found",
    "amount": 2
  },
  "error: typedef redefinition with different types ('long long' vs '__off64_t' (aka 'long'))": {
    "name": "typedef redefinition with different types ('long long' vs '__off64_t' (aka 'long'))",
    "projects": [
      "iozone3"
    ],
    "origin": "clang",
    "regex": "error\\:\\ typedef\\ redefinition\\ with\\ different\\ types\\ \\(\\'long\\ long\\'\\ vs\\ \\'__off64_t\\'\\ \\(aka\\ \\'long\\'\\)\\)",
    "amount": 1
  },
  "clang: error: unknown argument: '-fmacro-prefix-map=PATH/FILE.EXT": {
    "name": "clang: error: unknown argument: '-fmacro-prefix-map=PATH/FILE.EXT",
    "projects": [
      "libappimage"
    ],
    "origin": "clang_other",
    "regex": "clang\\:\\ error\\:\\ unknown\\ argument\\:\\ \\'\\-fmacro\\-prefix\\-map\\=(?:\\.\\.|\\.)?(?:[/]*/)+\\S*\\.\\S+(?:\\sline\\s\\d+:?)?(?=\\s|$|\\.)",
    "amount": 1
  },
  "[Error] Package cmake is not installed": {
    "name": "[Error] Package cmake is not installed",
    "projects": [
      "ibus-chewing"
    ],
    "origin": "cmake",
    "regex": "\\[Error\\]\\ Package\\ cmake\\ is\\ not\\ installed",
    "amount": 1
  },
  "[Error] Package ibus is not installed": {
    "name": "[Error] Package ibus is not installed",
    "projects": [
      "ibus-chewing"
    ],
    "origin": "cmake",
    "regex": "\\[Error\\]\\ Package\\ ibus\\ is\\ not\\ installed",
    "amount": 1
  },
  "[Error] Package ibus-devel is not installed": {
    "name": "[Error] Package ibus-devel is not installed",
    "projects": [
      "ibus-chewing"
    ],
    "origin": "cmake",
    "regex": "\\[Error\\]\\ Package\\ ibus\\-devel\\ is\\ not\\ installed",
    "amount": 1
  },
  "[Error] Package libchewing is not installed": {
    "name": "[Error] Package libchewing is not installed",
    "projects": [
      "ibus-chewing"
    ],
    "origin": "cmake",
    "regex": "\\[Error\\]\\ Package\\ libchewing\\ is\\ not\\ installed",
    "amount": 1
  },
  "[Error] Package libchewing-devel is not installed": {
    "name": "[Error] Package libchewing-devel is not installed",
    "projects": [
      "ibus-chewing"
    ],
    "origin": "cmake",
    "regex": "\\[Error\\]\\ Package\\ libchewing\\-devel\\ is\\ not\\ installed",
    "amount": 1
  },
  "[Error] Package glib2-devel is not installed": {
    "name": "[Error] Package glib2-devel is not installed",
    "projects": [
      "ibus-chewing"
    ],
    "origin": "cmake",
    "regex": "\\[Error\\]\\ Package\\ glib2\\-devel\\ is\\ not\\ installed",
    "amount": 1
  },
  "[Error] Package gtk2 is not installed": {
    "name": "[Error] Package gtk2 is not installed",
    "projects": [
      "ibus-chewing"
    ],
    "origin": "cmake",
    "regex": "\\[Error\\]\\ Package\\ gtk2\\ is\\ not\\ installed",
    "amount": 1
  },
  "[Error] Package gtk2-devel is not installed": {
    "name": "[Error] Package gtk2-devel is not installed",
    "projects": [
      "ibus-chewing"
    ],
    "origin": "cmake",
    "regex": "\\[Error\\]\\ Package\\ gtk2\\-devel\\ is\\ not\\ installed",
    "amount": 1
  },
  "[Error] Package gob2 is not installed": {
    "name": "[Error] Package gob2 is not installed",
    "projects": [
      "ibus-chewing"
    ],
    "origin": "cmake",
    "regex": "\\[Error\\]\\ Package\\ gob2\\ is\\ not\\ installed",
    "amount": 1
  },
  "[Error] Package libX11-devel is not installed": {
    "name": "[Error] Package libX11-devel is not installed",
    "projects": [
      "ibus-chewing"
    ],
    "origin": "cmake",
    "regex": "\\[Error\\]\\ Package\\ libX11\\-devel\\ is\\ not\\ installed",
    "amount": 1
  },
  "[Error] Package gettext is not installed": {
    "name": "[Error] Package gettext is not installed",
    "projects": [
      "ibus-chewing"
    ],
    "origin": "cmake",
    "regex": "\\[Error\\]\\ Package\\ gettext\\ is\\ not\\ installed",
    "amount": 1
  },
  "[Error] Package findutils is not installed": {
    "name": "[Error] Package findutils is not installed",
    "projects": [
      "ibus-chewing"
    ],
    "origin": "cmake",
    "regex": "\\[Error\\]\\ Package\\ findutils\\ is\\ not\\ installed",
    "amount": 1
  },
  "error: poPATH/FILE.EXT was not created by intltoolize.": {
    "name": "error: poPATH/FILE.EXT was not created by intltoolize.",
    "projects": [
      "ibus-unikey"
    ],
    "origin": "general_error",
    "regex": "error\\:\\ po(?:\\.\\.|\\.)?(?:[/]*/)+\\S*\\.\\S+(?:\\sline\\s\\d+:?)?(?=\\s|$|\\.)\\ was\\ not\\ created\\ by\\ intltoolize\\.",
    "amount": 1
  },
  "make target not found": {
    "name": "make target not found",
    "projects": [],
    "origin": "hardcoded",
    "regex": "make.*No\\ rule\\ to\\ make\\ target.*Stop:",
    "amount": 0
  },
  "error: ordered comparison between pointer and zero": {
    "name": "ordered comparison between pointer and zero",
    "projects": [],
    "origin": "hardcoded",
    "regex": "error\\:\\ ordered\\ comparison\\ between\\ pointer\\ and\\ zero",
    "amount": 0
  },
  "configure: error: something wrong with LDFLAGS": {
    "name": "something wrong with LDFLAGS",
    "projects": [],
    "origin": "hardcoded",
    "regex": "configure\\:\\ error\\:\\ something\\ wrong\\ with\\ LDFLAGS",
    "amount": 0
  },
  "Project ERROR: failed to parse default search paths from compiler output": {
    "name": "failed to parse default search paths from compiler output",
    "projects": [],
    "origin": "hardcoded",
    "regex": "Project\\ ERROR\\:\\ failed\\ to\\ parse\\ default\\ search\\ paths\\ from\\ compiler\\ output",
    "amount": 0
  },
  "error: embedding a directive within macro arguments has undefined behavior": {
    "name": "embedding a directive within macro arguments has undefined behavior",
    "projects": [],
    "origin": "hardcoded",
    "regex": "error\\:\\ embedding\\ a\\ directive\\ within\\ macro\\ arguments\\ has\\ undefined\\ behavior",
    "amount": 0
  },
  "configure: error: could not find gnutls": {
    "name": "configure: error: could not find gnutls",
    "projects": [],
    "origin": "hardcoded",
    "regex": "configure\\:\\ error\\:\\ could\\ not\\ find\\ gnutls",
    "amount": 0
  },
  "configure: error:": {
    "name": "configure_error",
    "projects": [],
    "origin": "hardcoded",
    "regex": "configure\\:\\ error\\:",
    "amount": 0
  },
  "error: use of undeclared identifier": {
    "name": "undeclared identifier",
    "projects": [],
    "origin": "hardcoded",
    "regex": "error\\:\\ use\\ of\\ undeclared\\ identifier",
    "amount": 0
  },
  "error: empty search path given via `-L`": {
    "name": "empty search path given via `-L`",
    "projects": [],
    "origin": "hardcoded",
    "regex": "error\\:\\ empty\\ search\\ path\\ given\\ via\\ \\`\\-L\\`",
    "amount": 0
  },
  "error: invalid suffix on literal": {
    "name": "error: invalid suffix on literal",
    "projects": [],
    "origin": "hardcoded",
    "regex": "error\\:\\ invalid\\ suffix\\ on\\ literal",
    "amount": 0
  },
  "error: 'iostream' file not found": {
    "name": "'iostream' not found",
    "projects": [],
    "origin": "hardcoded",
    "regex": "error\\:\\ \\'iostream\\'\\ file\\ not\\ found",
    "amount": 0
  }
}